generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Verification {
  id        String   @id @default(dbgenerated("gen_random_uuid()"))
  userId    String
  createdAt DateTime @default(now())
  url       String?
  title     String?
  analysis  Json?
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("verifications")
}

model TrustedSource {
  id        String   @id @default(dbgenerated("gen_random_uuid()"))
  userId    String
  domain    String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, domain])
  @@map("trusted_sources")
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  sessionToken String   @id
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id             String          @id @default(cuid())
  name           String?
  email          String?         @unique
  emailVerified  DateTime?
  image          String?
  accounts       Account[]
  sessions       Session[]
  trustedSources TrustedSource[]
  verifications  Verification[]

  @@map("users")
}
